{"version":3,"file":"static/js/575.941520d1.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/PhonebookList/PhonebookList.module.css?7d83","components/PhonebookList/PhonebookList.jsx","components/pages/Contacts.js","webpack://react-homework-template/./src/components/App.module.css?6c4d","webpack://react-homework-template/./src/components/PhonebookForm/PhonebookForm.module.css?56c1"],"sourcesContent":["// import { nanoid } from 'nanoid';\n// import React from 'react';\n// import { useContactsQuery, useAddContactMutation } from 'redux/contacts';\n// import style from './PhonebookForm.module.css';\n\n// const PhonebookForm = () => {\n//   const id = nanoid();\n\n//   const { data } = useContactsQuery();\n//   const [addContact] = useAddContactMutation();\n\n//   const addNewContact = e => {\n//     e.preventDefault();\n\n//     const form = e.currentTarget;\n//     const name = form.name.value;\n//     const phone = form.phone.value;\n//     const normalizedName = name.toLowerCase();\n//     let nameOntheList = false;\n\n//     const newContact = {\n//       id: nanoid(),\n//       name: name,\n//       phone: phone,\n//     };\n\n//     data.forEach(contact => {\n//       if (contact.name.toLowerCase() === normalizedName) {\n//         alert(`${contact.name} is already in contacts`);\n//         nameOntheList = true;\n//       }\n//     });\n\n//     if (nameOntheList) return;\n\n//     addContact(newContact);\n//     form.reset();\n//   };\n\n//   return (\n//     <form className={style.form} onSubmit={addNewContact}>\n//       <label htmlFor={id} className={style.formText}>Name</label>\n      \n//       <input\n//         className={style.formInput}\n//         id={id}\n//         type=\"text\"\n//         name=\"name\"\n//         placeholder ='Name'\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//         required\n//       />\n//       <label htmlFor={id} className={style.formText}>Phone</label>\n//       <input\n//         className={style.formInput}\n//         id={id}\n//         type=\"tel\"\n//         name=\"phone\"\n//         placeholder='Phone Number'\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//         required\n//       />\n//       <button className={style.formBtn} type=\"submit\">\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default PhonebookForm;\n\nimport { nanoid } from 'nanoid';\nimport TextField from '@mui/material/TextField';\n\nimport React from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contacts';\nimport { toast } from 'react-toastify';\nimport style from './PhonebookForm.module.css';\n\nconst PhonebookForm = () => {\n  const id = nanoid();\n\n  const { data } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const addNewContact = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const name = form.name.value;\n    const number = form.number.value;\n    const normalizedName = name.toLowerCase();\n    let nameOntheList = false;\n\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    data.forEach(contact => {\n      if (contact.name.toLowerCase() === normalizedName) {\n        toast.info(`${contact.name} is already in contacts`, {\n  icon: \"🦄\",  theme: \"dark\"\n});\n        nameOntheList = true;\n        \n      }\n    });\n\n    if (nameOntheList) return;\n\n    addContact(newContact);\n    form.reset();\n  };\n\n  return (\n    <form className={style.form} onSubmit={addNewContact}>\n      <label htmlFor={id} className={style.formText}></label>\n      \n      <TextField\n        className={style.formInput}\n        label=\"Name\"\n        id={id}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        color=\"secondary\" \n      />\n      <label htmlFor={id} className={style.formText}></label>\n      <TextField\n        className={style.formInput}\n        label=\"Phone Number\"\n        id={id}\n        required\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n       color=\"secondary\" \n      />\n      <button className={style.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhonebookForm;","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import style from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport debounce from 'debounce';\n\nexport const Filter = () => {\n    \n    const dispatch = useDispatch();\n    const onChange = debounce(e => {\n    const value = e.target.value.toLowerCase();\n\n    dispatch(setFilter(value));\n    },1000);\n\n    return (\n        <label className={style.filterLabel}>\n        Find contacts by name\n        <input className={style.filterInput} type=\"name\"   placeholder='Start typing...' onChange={onChange} />\n        </label>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"PhonebookList_contactsList__FRuOU\",\"contactsItem\":\"PhonebookList_contactsItem__XSv7B\",\"contactBtn\":\"PhonebookList_contactBtn__gXoR2\",\"contactsName\":\"PhonebookList_contactsName__BO0-L\",\"contactImage\":\"PhonebookList_contactImage__RDvZ7\"};","// import PropTypes from 'prop-types';\n// import style from './PhonebookList.module.css';\n// import { getFilterValue } from 'redux/selectors';\n// import { useSelector } from 'react-redux';\n// import { useContactsQuery, useDeleteContactMutation } from 'redux/contacts';\n\n// export const PhonebookList = () => {\n//   const { data } = useContactsQuery();\n//   const [deleteContact] = useDeleteContactMutation();\n\n//   const filterValue = useSelector(getFilterValue);\n//     console.log(data)\n\n//   if (!data) {\n//     return <div>No contacts</div>;\n//   }\n\n//   const filteredContacts = () => {\n//     const normalizedFilter = filterValue.toLowerCase();\n//     return (\n//       data &&\n//       data.filter(contact =>\n//         contact.name.toLowerCase().includes(normalizedFilter)\n//       )\n//     );\n//   };\n\n//   const contactsFilter = filteredContacts();\n\n//   return (\n    \n//       <ul className={style.contactsList}>\n//         {contactsFilter.map(({ id, name, phone, image }) => (\n//           <li key={id} className={style.contactsItem}>\n//             <img className={ style.contactImage}src={image} alt='avatar' width=\"80\" height=\"80\" /> \n//             <div className={style.wrapper}>\n//               <span className={style.contactsName}>{`${name}`}</span><span className={style.contactsPhone}>{`${phone}`}</span>\n              \n//             <button\n//               type=\"button\"\n//               className={style.contactBtn}\n//               onClick={() => deleteContact(id)}\n//             >\n//               Delete\n//               </button>\n//               </div>\n//           </li>\n//         ))}\n//       </ul>\n    \n//   );\n// };\n\n// PhonebookList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n// };\n\nimport PropTypes from 'prop-types';\nimport style from './PhonebookList.module.css';\nimport { getFilterValue } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/contacts';\nimport Loader from 'components/Loader/Loader';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\n\nexport const PhonebookList = () => {\n  const { data, isLoading } = useGetContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n\n  const filterValue = useSelector(getFilterValue);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!data) {\n    return <div>No contacts</div>;\n  }\n\n  const contactsFilter = data.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n\n  return (\n    <ul className={style.contactsList}>\n      {contactsFilter.map(({ id, name, number }) => (\n        <li key={id} className={style.contactsItem}>\n          <div className={style.wrapper}>\n            <span className={style.contactsName}>{`${name}`}</span>\n            <span className={style.contactsPhone}>{`${number}`}</span>\n            <IconButton\n              disabled={isLoading}\n              onClick={() => deleteContact(id)}\n              edge=\"end\"\n              aria-label=\"delete\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import PhonebookForm from 'components/PhonebookForm/PhonebookForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhonebookList } from 'components/PhonebookList/PhonebookList';\nimport style from 'components/App.module.css';\nimport { useGetContactsQuery } from 'redux/contacts';\nimport Loader from 'components/Loader/Loader';\n\nconst Contacts = () => {\n  const { data: isLoggedIn, isLoading, isError, error } = useGetContactsQuery();\n\n  let content;\n\n  if (isLoading) {\n    content = <Loader />;\n  } else if (isLoggedIn) {\n    content = (\n      <div className={style.container}>\n        <h1>Phonebook</h1>\n        <div className={style.wrapper}>\n          <PhonebookForm />\n          <Filter />\n        </div>\n        <PhonebookList />\n      </div>\n    );\n  } else if (isError) {\n    content = <p>{JSON.stringify(error)}</p>;\n  }\n  return content;\n};\n\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"App_container__ZdBeZ\",\"wrapper\":\"App_wrapper__oLZUe\",\"link\":\"App_link__91nmW\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhonebookForm_form__0btgv\",\"formInput\":\"PhonebookForm_formInput__KgrRC\",\"formBtn\":\"PhonebookForm_formBtn__wH184\",\"formText\":\"PhonebookForm_formText__2acV7\"};"],"names":["id","nanoid","data","useGetContactsQuery","useAddContactMutation","addContact","className","style","onSubmit","e","preventDefault","form","currentTarget","name","value","number","normalizedName","toLowerCase","nameOntheList","newContact","forEach","contact","toast","icon","theme","reset","htmlFor","TextField","label","type","pattern","title","required","color","Filter","dispatch","useDispatch","onChange","debounce","target","setFilter","placeholder","PhonebookList","isLoading","useDeleteContactMutation","deleteContact","filterValue","useSelector","getFilterValue","Loader","contactsFilter","filter","includes","map","IconButton","disabled","onClick","edge","Delete","content","isLoggedIn","isError","error","JSON","stringify"],"sourceRoot":""}